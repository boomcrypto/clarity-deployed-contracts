(use-trait nma 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.trait-sip-010.sip-010-trait) (use-trait nmb 'SP2AKWJYC7BNY18W1XXKPGP0YVEK63QJG4793Z2D4.sip-010-trait-ft-standard.sip-010-trait) (use-trait nmc 'SP2ZNGJ85ENDY6QRHQ5P2D4FXKGZWCKTB2T0Z55KS.dao-traits-v4.sip010-ft-trait) (use-trait share-fee-to-trait 'SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1.univ2-share-fee-to-trait.share-fee-to-trait) (use-trait sfttc 'SP2ZNGJ85ENDY6QRHQ5P2D4FXKGZWCKTB2T0Z55KS.dao-traits-v4.share-fee-to-trait) (use-trait upt2 'SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1.univ2-pool-trait_v1_0_0.univ2-pool-trait) (use-trait uft2 'SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1.univ2-fees-trait_v1_0_0.univ2-fees-trait) (use-trait sspl 'SP1Z92MPDQEWZXW36VX71Q25HKF5K2EPCJ304F275.liquidity-token-trait-v4c.liquidity-token-trait) (define-public (va (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (source-trait2 <nma>) (wmum2 <nma>) (ll2 uint) (ii uint) (illlli uint) (nnnnwm uint) ) (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait2 wmum2 ll2 (* (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) nnnnwm) (some illlli) ) ) (define-public (vv (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (ii uint) (illlli uint) ) (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) illlli ) ) (define-public (vd (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (mumnnu <nmb>) (mw <nmb>) (ii uint) (illlli uint) ) (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x mumnnu mw (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) illlli ) ) (define-public (vaa (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (source-trait2 <nma>) (wmum2 <nma>) (ll2 uint) (source-trait3 <nma>) (wmum3 <nma>) (ll3 uint) (ii uint) (illlli uint) (nnnnwm uint) ) (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait3 wmum3 ll3 (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait2 wmum2 ll2 (* (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) nnnnwm) (some u1))) (some illlli) ) ) (define-public (vav (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (source-trait2 <nma>) (wmum2 <nma>) (ll2 uint) (illl1ii (optional <upt2>)) (O0O00 (optional <uft2>)) (id-3 uint) (ill-3 <nmb>) (j-3 <nmb>) (jj-3 <nmb>) (jlj-3 <nmb>) (share-fee-to-3 <share-fee-to-trait>) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) ) (vi illl1ii O0O00 id-3 ill-3 j-3 jj-3 jlj-3 share-fee-to-3 (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait2 wmum2 ll2 (* (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) nnnnwm) (some u1))) wnnwm) illlli ) ) (define-public (vad (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (source-trait2 <nma>) (wmum2 <nma>) (ll2 uint) (l1llli <nmb>) (mnwmnun <nmb>) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) ) (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x l1llli mnwmnun (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait2 wmum2 ll2 (* (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) nnnnwm) (some u1))) wnnwm) illlli ) ) (define-public (vva (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (source-trait3 <nma>) (wmum3 <nma>) (ll3 uint) (ii uint) (illlli uint) (nnnnwm uint) ) (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait3 wmum3 ll3 (* (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) u1)) nnnnwm) (some illlli) ) ) (define-public (vvv (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (illl1ii (optional <upt2>)) (O0O00 (optional <uft2>)) (id-3 uint) (ill-3 <nmb>) (j-3 <nmb>) (jj-3 <nmb>) (jlj-3 <nmb>) (share-fee-to-3 <share-fee-to-trait>) (ii uint) (illlli uint) ) (vi illl1ii O0O00 id-3 ill-3 j-3 jj-3 jlj-3 share-fee-to-3 (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) u1)) illlli ) ) (define-public (vvd (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (l1llli <nmb>) (mnwmnun <nmb>) (ii uint) (illlli uint) ) (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x l1llli mnwmnun (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) u1)) illlli ) ) (define-public (vda (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (mumnnu <nmb>) (mw <nmb>) (source-trait3 <nma>) (wmum3 <nma>) (ll3 uint) (ii uint) (illlli uint) (nnnnwm uint) ) (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait3 wmum3 ll3 (* (try! (di mumnnu mw (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) )) nnnnwm) (some illlli) ) ) (define-public (vdv (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (mumnnu <nmb>) (mw <nmb>) (illl1ii (optional <upt2>)) (O0O00 (optional <uft2>)) (id-3 uint) (ill-3 <nmb>) (j-3 <nmb>) (jj-3 <nmb>) (jlj-3 <nmb>) (share-fee-to-3 <share-fee-to-trait>) (ii uint) (illlli uint) ) (vi illl1ii O0O00 id-3 ill-3 j-3 jj-3 jlj-3 share-fee-to-3 (try! (di mumnnu mw (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) )) illlli ) ) (define-public (vdd (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (mumnnu <nmb>) (mw <nmb>) (l1llli <nmb>) (mnwmnun <nmb>) (ii uint) (illlli uint) ) (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x l1llli mnwmnun (try! (di mumnnu mw (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) )) illlli ) ) (define-public (vaaa (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (source-trait2 <nma>) (wmum2 <nma>) (ll2 uint) (source-trait3 <nma>) (wmum3 <nma>) (ll3 uint) (ii uint) (illlli uint) (nnnnwm uint) ) (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait3 wmum3 ll3 (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait2 wmum2 ll2 (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) nnnnwm) (some u1))) (some u1))) (some illlli)) ) (define-public (vaav (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (source-trait2 <nma>) (wmum2 <nma>) (ll2 uint) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) ) (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait2 wmum2 ll2 (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) nnnnwm) (some u1))) (some u1))) wnnwm) illlli) ) (define-public (vaad (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (source-trait2 <nma>) (wmum2 <nma>) (ll2 uint) (llijiji <nmb>) (wm <nmb>) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) ) (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x llijiji wm (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait2 wmum2 ll2 (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) nnnnwm) (some u1))) (some u1))) wnnwm) illlli) ) (define-public (vava (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (source-trait2 <nma>) (wmum2 <nma>) (ll2 uint) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) (nnwm uint) ) (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait2 wmum2 ll2 (* (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) nnnnwm) (some u1))) wnnwm) u1)) nnwm) (some illlli)) ) (define-public (vavd (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) ) (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x llijiji wm (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) nnnnwm) (some u1))) wnnwm) u1)) illlli) ) (define-public (vada (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (llijiji <nmb>) (wm <nmb>) (source-trait2 <nma>) (wmum2 <nma>) (ll2 uint) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) (nnwm uint) ) (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait2 wmum2 ll2 (* (try! (di llijiji wm (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) nnnnwm) (some u1))) nnwm) )) wnnwm) (some illlli)) ) (define-public (vadv (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (llijiji <nmb>) (wm <nmb>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) ) (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (di llijiji wm (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) nnnnwm) (some u1))) wnnwm) )) illlli) ) (define-public (vavv (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (illl1ii (optional <upt2>)) (O0O00 (optional <uft2>)) (id-3 uint) (ill-3 <nmb>) (j-3 <nmb>) (jj-3 <nmb>) (jlj-3 <nmb>) (share-fee-to-3 <share-fee-to-trait>) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) ) (vi illl1ii O0O00 id-3 ill-3 j-3 jj-3 jlj-3 share-fee-to-3 (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) nnnnwm) (some u1))) wnnwm) u1)) illlli) ) (define-public (vadd (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (llijiji <nmb>) (wm <nmb>) (mumnnu <nmb>) (mw <nmb>) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) ) (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x mumnnu mw (try! (di llijiji wm (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) nnnnwm) (some u1))) wnnwm) )) illlli) ) (define-public (vvaa (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (source-trait2 <nma>) (wmum2 <nma>) (ll2 uint) (ii uint) (illlli uint) (nnnnwm uint) ) (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait2 wmum2 ll2 (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) u1)) nnnnwm) (some u1))) (some illlli)) ) (define-public (vvav (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (illl1ii (optional <upt2>)) (O0O00 (optional <uft2>)) (id-3 uint) (ill-3 <nmb>) (j-3 <nmb>) (jj-3 <nmb>) (jlj-3 <nmb>) (share-fee-to-3 <share-fee-to-trait>) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) ) (vi illl1ii O0O00 id-3 ill-3 j-3 jj-3 jlj-3 share-fee-to-3 (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) u1)) nnnnwm) (some u1))) wnnwm) illlli) ) (define-public (vvad (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (llijiji <nmb>) (wm <nmb>) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) ) (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x llijiji wm (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) u1)) nnnnwm) (some u1))) wnnwm) illlli) ) (define-public (vvva (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (illl1ii (optional <upt2>)) (O0O00 (optional <uft2>)) (id-3 uint) (ill-3 <nmb>) (j-3 <nmb>) (jj-3 <nmb>) (jlj-3 <nmb>) (share-fee-to-3 <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (ii uint) (illlli uint) (nnnnwm uint) ) (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi illl1ii O0O00 id-3 ill-3 j-3 jj-3 jlj-3 share-fee-to-3 (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) u1)) u1)) nnnnwm) (some illlli)) ) (define-public (vvvv (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (illl1ii (optional <upt2>)) (O0O00 (optional <uft2>)) (id-3 uint) (ill-3 <nmb>) (j-3 <nmb>) (jj-3 <nmb>) (jlj-3 <nmb>) (share-fee-to-3 <share-fee-to-trait>) (il1ii (optional <upt2>)) (OO00 (optional <uft2>)) (id-4 uint) (ill-4 <nmb>) (j-4 <nmb>) (jj-4 <nmb>) (jlj-4 <nmb>) (share-fee-to-4 <share-fee-to-trait>) (ii uint) (illlli uint) ) (vi il1ii OO00 id-4 ill-4 j-4 jj-4 jlj-4 share-fee-to-4 (try! (vi illl1ii O0O00 id-3 ill-3 j-3 jj-3 jlj-3 share-fee-to-3 (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) u1)) u1)) illlli) ) (define-public (vvvd (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (illl1ii (optional <upt2>)) (O0O00 (optional <uft2>)) (id-3 uint) (ill-3 <nmb>) (j-3 <nmb>) (jj-3 <nmb>) (jlj-3 <nmb>) (share-fee-to-3 <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (ii uint) (illlli uint) ) (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x llijiji wm (try! (vi illl1ii O0O00 id-3 ill-3 j-3 jj-3 jlj-3 share-fee-to-3 (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) u1)) u1)) illlli) ) (define-public (vvda (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (source-trait <nma>) (wmum <nma>) (ll uint) (ii uint) (illlli uint) (nnnnwm uint) ) (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (di llijiji wm (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) u1)) )) nnnnwm) (some illlli)) ) (define-public (vvdv (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (illl1ii (optional <upt2>)) (O0O00 (optional <uft2>)) (id-3 uint) (ill-3 <nmb>) (j-3 <nmb>) (jj-3 <nmb>) (jlj-3 <nmb>) (share-fee-to-3 <share-fee-to-trait>) (ii uint) (illlli uint) ) (vi illl1ii O0O00 id-3 ill-3 j-3 jj-3 jlj-3 share-fee-to-3 (try! (di llijiji wm (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) u1)) )) illlli) ) (define-public (vvdd (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (mumnnu <nmb>) (mw <nmb>) (ii uint) (illlli uint) ) (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x mumnnu mw (try! (di llijiji wm (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) u1)) )) illlli) ) (define-public (vdaa (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (source-trait <nma>) (wmum <nma>) (ll uint) (source-trait2 <nma>) (wmum2 <nma>) (ll2 uint) (ii uint) (illlli uint) (nnnnwm uint) ) (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait2 wmum2 ll2 (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (di llijiji wm (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) )) nnnnwm) (some u1))) (some illlli)) ) (define-public (vdav (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (source-trait <nma>) (wmum <nma>) (ll uint) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) ) (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (di llijiji wm (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) )) nnnnwm) (some u1))) wnnwm) illlli) ) (define-public (vdad (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (source-trait <nma>) (wmum <nma>) (ll uint) (mumnnu <nmb>) (mw <nmb>) (ii uint) (illlli uint) (nnnnwm uint) (wnnwm uint) ) (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x mumnnu mw (/ (try! (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (di llijiji wm (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) )) nnnnwm) (some u1))) wnnwm) illlli) ) (define-public (vdva (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (source-trait <nma>) (wmum <nma>) (ll uint) (ii uint) (illlli uint) (nnnnwm uint) ) (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (di llijiji wm (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) )) u1)) nnnnwm) (some illlli)) ) (define-public (vdvv (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (illl1ii (optional <upt2>)) (O0O00 (optional <uft2>)) (id-3 uint) (ill-3 <nmb>) (j-3 <nmb>) (jj-3 <nmb>) (jlj-3 <nmb>) (share-fee-to-3 <share-fee-to-trait>) (ii uint) (illlli uint) ) (vi illl1ii O0O00 id-3 ill-3 j-3 jj-3 jlj-3 share-fee-to-3 (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (di llijiji wm (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) )) u1)) illlli) ) (define-public (vdvd (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-2 <nmb>) (j-2 <nmb>) (jj-2 <nmb>) (jlj-2 <nmb>) (share-fee-to-2 <share-fee-to-trait>) (l1llli <nmb>) (mnwmnun <nmb>) (ii uint) (illlli uint) ) (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x l1llli mnwmnun (try! (vi il17ii O00oO id-2 ill-2 j-2 jj-2 jlj-2 share-fee-to-2 (try! (di llijiji wm (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) )) u1)) illlli) ) (define-public (vdda (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (mumnnu <nmb>) (mw <nmb>) (source-trait <nma>) (wmum <nma>) (ll uint) (ii uint) (illlli uint) (nnnnwm uint) ) (contract-call? 'SP102V8P0F7JX67ARQ77WEA3D3CFB5XW39REDT0AM.amm-pool-v2-01 swap-helper source-trait wmum ll (* (try! (di mumnnu mw (try! (di llijiji wm (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) )) )) nnnnwm) (some illlli)) ) (define-public (vddv (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (mumnnu <nmb>) (mw <nmb>) (il17ii (optional <upt2>)) (O00oO (optional <uft2>)) (id-2 uint) (ill-3 <nmb>) (j-3 <nmb>) (jj-3 <nmb>) (jlj-3 <nmb>) (share-fee-to-3 <share-fee-to-trait>) (ii uint) (illlli uint) ) (vi il17ii O00oO id-2 ill-3 j-3 jj-3 jlj-3 share-fee-to-3 (try! (di mumnnu mw (try! (di llijiji wm (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) )) )) illlli) ) (define-public (vddd (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (llijiji <nmb>) (wm <nmb>) (mumnnu <nmb>) (mw <nmb>) (l1llli <nmb>) (mnwmnun <nmb>) (ii uint) (illlli uint) ) (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x l1llli mnwmnun (try! (di mumnnu mw (try! (di llijiji wm (try! (vi O0O mnwmn id ill j jj jlj share-fee-to ii u1)) )) )) illlli) ) (define-public (di (llijiji <nmb>) (wm <nmb>) (ii uint)) (ok (if (is-err (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 get-pair-details (contract-of wm) (contract-of llijiji))) (unwrap-panic (element-at? (try! (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-x-for-y llijiji wm ii u1)) u1)) (unwrap-panic (element-at? (try! (contract-call? 'SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR.arkadiko-swap-v2-1 swap-y-for-x llijiji wm ii u1)) u0)) ))) (define-public (vi (O0O (optional <upt2>)) (mnwmn (optional <uft2>)) (id uint) (ill <nmb>) (j <nmb>) (jj <nmb>) (jlj <nmb>) (share-fee-to <share-fee-to-trait>) (ii uint) (illlli uint)) (ok (match O0O pool (get amt-out (try! (contract-call? pool swap jj jlj (unwrap-panic mnwmn) ii illlli))) (get amt-out (try! (contract-call? 'SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1.univ2-router swap-exact-tokens-for-tokens id ill j jj jlj share-fee-to ii illlli))) )) )