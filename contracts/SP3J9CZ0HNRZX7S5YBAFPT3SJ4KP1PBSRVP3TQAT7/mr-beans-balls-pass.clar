;; mr-beans-balls-pass
;; contractType: editions

(impl-trait 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.nft-trait.nft-trait)

(define-non-fungible-token mr-beans-balls-pass uint)

;; Constants
(define-constant DEPLOYER tx-sender)
(define-constant COMM u1000)
(define-constant COMM-ADDR 'SPNWZ5V2TPWGQGVDR6T7B6RQ4XMGZ4PXTEE0VQ0S)

(define-constant ERR-NO-MORE-NFTS u100)
(define-constant ERR-NOT-ENOUGH-PASSES u101)
(define-constant ERR-PUBLIC-SALE-DISABLED u102)
(define-constant ERR-CONTRACT-INITIALIZED u103)
(define-constant ERR-NOT-AUTHORIZED u104)
(define-constant ERR-INVALID-USER u105)
(define-constant ERR-LISTING u106)
(define-constant ERR-WRONG-COMMISSION u107)
(define-constant ERR-NOT-FOUND u108)
(define-constant ERR-PAUSED u109)
(define-constant ERR-MINT-LIMIT u110)
(define-constant ERR-METADATA-FROZEN u111)
(define-constant ERR-AIRDROP-CALLED u112)
(define-constant ERR-NO-MORE-MINTS u113)
(define-constant ERR-INVALID-PERCENTAGE u114)
(define-constant ERR-CONTRACT-LOCKED u115)

;; Internal variables
(define-data-var mint-limit uint u900)
(define-data-var last-id uint u1)
(define-data-var total-price uint u1000000)
(define-data-var artist-address principal 'SP3J9CZ0HNRZX7S5YBAFPT3SJ4KP1PBSRVP3TQAT7)
(define-data-var ipfs-root (string-ascii 80) "ipfs://ipfs/QmT1KEs8wnfsz2KjagWWE4QRK3dRpf5Ub9DCqeWPqectWy/")
(define-data-var mint-paused bool false)
(define-data-var premint-enabled bool false)
(define-data-var sale-enabled bool false)
(define-data-var metadata-frozen bool false)
(define-data-var airdrop-called bool false)
(define-data-var mint-cap uint u3)
(define-data-var locked bool false)

(define-map mints-per-user principal uint)
(define-map mint-passes principal uint)

(define-public (lock-contract)
  (begin
    (asserts! (or (is-eq tx-sender (var-get artist-address)) (is-eq tx-sender DEPLOYER)) (err ERR-NOT-AUTHORIZED))
    (var-set locked true)
    (ok true)))

(define-public (claim) 
  (mint (list true)))

(define-public (claim-two) (mint (list true true)))

(define-public (claim-three) (mint (list true true true)))

;; Mintpass Minting
(define-private (mint (orders (list 25 bool)))
  (let 
    (
      (passes (get-passes tx-sender))
    )
    (if (var-get premint-enabled)
      (begin
        (asserts! (>= passes (len orders)) (err ERR-NOT-ENOUGH-PASSES))
        (map-set mint-passes tx-sender (- passes (len orders)))
        (mint-many orders)
      )
      (begin
        (asserts! (var-get sale-enabled) (err ERR-PUBLIC-SALE-DISABLED))
        (mint-many orders)
      )
    )))

(define-private (mint-many (orders (list 25 bool )))  
  (let 
    (
      (last-nft-id (var-get last-id))
      (enabled (asserts! (or (is-eq (var-get mint-limit) u0) (<= last-nft-id (var-get mint-limit))) (err ERR-NO-MORE-NFTS)))
      (art-addr (var-get artist-address))
      (id-reached (fold mint-many-iter orders last-nft-id))
      (price (* (var-get total-price) (- id-reached last-nft-id)))
      (total-commission (/ (* price COMM) u10000))
      (current-balance (get-balance tx-sender))
      (total-artist (- price total-commission))
      (capped (> (var-get mint-cap) u0))
      (user-mints (get-mints tx-sender))
    )
    (asserts! (or (is-eq false (var-get mint-paused)) (is-eq tx-sender DEPLOYER)) (err ERR-PAUSED))
    (asserts! (is-eq (var-get locked) false) (err ERR-CONTRACT-LOCKED))
    (asserts! (or (not capped) (is-eq tx-sender DEPLOYER) (is-eq tx-sender art-addr) (>= (var-get mint-cap) (+ (len orders) user-mints))) (err ERR-NO-MORE-MINTS))
    (map-set mints-per-user tx-sender (+ (len orders) user-mints))
    (if (or (is-eq tx-sender art-addr) (is-eq tx-sender DEPLOYER) (is-eq (var-get total-price) u0000000))
      (begin
        (var-set last-id id-reached)
        (map-set token-count tx-sender (+ current-balance (- id-reached last-nft-id)))
      )
      (begin
        (var-set last-id id-reached)
        (map-set token-count tx-sender (+ current-balance (- id-reached last-nft-id)))
        (try! (stx-transfer? total-artist tx-sender (var-get artist-address)))
        (try! (stx-transfer? total-commission tx-sender COMM-ADDR))
      )    
    )
    (ok id-reached)))

(define-private (mint-many-iter (ignore bool) (next-id uint))
  (if (or (is-eq (var-get mint-limit) u0) (<= next-id (var-get mint-limit)))
    (begin
      (unwrap! (nft-mint? mr-beans-balls-pass next-id tx-sender) next-id)
      (+ next-id u1)    
    )
    next-id))

(define-public (set-artist-address (address principal))
  (begin
    (asserts! (or (is-eq tx-sender (var-get artist-address)) (is-eq tx-sender DEPLOYER)) (err ERR-INVALID-USER))
    (ok (var-set artist-address address))))

(define-public (set-price (price uint))
  (begin
    (asserts! (or (is-eq tx-sender (var-get artist-address)) (is-eq tx-sender DEPLOYER)) (err ERR-INVALID-USER))
    (ok (var-set total-price price))))

(define-public (toggle-pause)
  (begin
    (asserts! (or (is-eq tx-sender (var-get artist-address)) (is-eq tx-sender DEPLOYER)) (err ERR-INVALID-USER))
    (ok (var-set mint-paused (not (var-get mint-paused))))))

(define-public (set-mint-limit (limit uint))
  (begin
    (asserts! (or (is-eq tx-sender (var-get artist-address)) (is-eq tx-sender DEPLOYER)) (err ERR-INVALID-USER))
    (asserts! (< limit (var-get mint-limit)) (err ERR-MINT-LIMIT))
    (ok (var-set mint-limit limit))))

(define-public (burn (token-id uint))
  (begin 
    (asserts! (is-owner token-id tx-sender) (err ERR-NOT-AUTHORIZED))
    (asserts! (is-none (map-get? market token-id)) (err ERR-LISTING))
    (nft-burn? mr-beans-balls-pass token-id tx-sender)))

(define-private (is-owner (token-id uint) (user principal))
    (is-eq user (unwrap! (nft-get-owner? mr-beans-balls-pass token-id) false)))

(define-public (set-base-uri (new-base-uri (string-ascii 80)))
  (begin
    (asserts! (or (is-eq tx-sender (var-get artist-address)) (is-eq tx-sender DEPLOYER)) (err ERR-NOT-AUTHORIZED))
    (asserts! (not (var-get metadata-frozen)) (err ERR-METADATA-FROZEN))
    (print { notification: "token-metadata-update", payload: { token-class: "nft", contract-id: (as-contract tx-sender) }})
    (var-set ipfs-root new-base-uri)
    (ok true)))

(define-public (freeze-metadata)
  (begin
    (asserts! (or (is-eq tx-sender (var-get artist-address)) (is-eq tx-sender DEPLOYER)) (err ERR-NOT-AUTHORIZED))
    (var-set metadata-frozen true)
    (ok true)))

;; Non-custodial SIP-009 transfer function
(define-public (transfer (id uint) (sender principal) (recipient principal))
  (begin
    (asserts! (is-eq tx-sender sender) (err ERR-NOT-AUTHORIZED))
    (asserts! (is-none (map-get? market id)) (err ERR-LISTING))
    (trnsfr id sender recipient)))

;; read-only functions
(define-read-only (get-owner (token-id uint))
  (ok (nft-get-owner? mr-beans-balls-pass token-id)))

(define-read-only (get-last-token-id)
  (ok (- (var-get last-id) u1)))

(define-read-only (get-token-uri (token-id uint))
  (ok (some (var-get ipfs-root))))

(define-read-only (get-paused)
  (ok (var-get mint-paused)))

(define-read-only (get-price)
  (ok (var-get total-price)))

(define-read-only (get-artist-address)
  (ok (var-get artist-address)))

(define-read-only (get-locked)
  (ok (var-get locked)))

(define-read-only (get-mints (caller principal))
  (default-to u0 (map-get? mints-per-user caller)))

(define-read-only (get-mint-limit)
  (ok (var-get mint-limit)))

(define-data-var license-uri (string-ascii 80) "https://arweave.net/zmc1WTspIhFyVY82bwfAIcIExLFH5lUcHHUN0wXg4W8/1")
(define-data-var license-name (string-ascii 40) "EXCLUSIVE")

(define-read-only (get-license-uri)
  (ok (var-get license-uri)))
  
(define-read-only (get-license-name)
  (ok (var-get license-name)))
  
(define-public (set-license-uri (uri (string-ascii 80)))
  (begin
    (asserts! (or (is-eq tx-sender (var-get artist-address)) (is-eq tx-sender DEPLOYER)) (err ERR-NOT-AUTHORIZED))
    (ok (var-set license-uri uri))))
    
(define-public (set-license-name (name (string-ascii 40)))
  (begin
    (asserts! (or (is-eq tx-sender (var-get artist-address)) (is-eq tx-sender DEPLOYER)) (err ERR-NOT-AUTHORIZED))
    (ok (var-set license-name name))))

;; Non-custodial marketplace extras
(use-trait commission-trait 'SP3D6PV2ACBPEKYJTCMH7HEN02KP87QSP8KTEH335.commission-trait.commission)

(define-map token-count principal uint)
(define-map market uint {price: uint, commission: principal, royalty: uint})

(define-read-only (get-balance (account principal))
  (default-to u0
    (map-get? token-count account)))

(define-private (trnsfr (id uint) (sender principal) (recipient principal))
  (match (nft-transfer? mr-beans-balls-pass id sender recipient)
    success
      (let
        ((sender-balance (get-balance sender))
        (recipient-balance (get-balance recipient)))
          (map-set token-count
            sender
            (- sender-balance u1))
          (map-set token-count
            recipient
            (+ recipient-balance u1))
          (ok success))
    error (err error)))

(define-private (is-sender-owner (id uint))
  (let ((owner (unwrap! (nft-get-owner? mr-beans-balls-pass id) false)))
    (or (is-eq tx-sender owner) (is-eq contract-caller owner))))

(define-read-only (get-listing-in-ustx (id uint))
  (map-get? market id))

(define-public (list-in-ustx (id uint) (price uint) (comm-trait <commission-trait>))
  (let ((listing  {price: price, commission: (contract-of comm-trait), royalty: (var-get royalty-percent)}))
    (asserts! (is-sender-owner id) (err ERR-NOT-AUTHORIZED))
    (map-set market id listing)
    (print (merge listing {a: "list-in-ustx", id: id}))
    (ok true)))

(define-public (unlist-in-ustx (id uint))
  (begin
    (asserts! (is-sender-owner id) (err ERR-NOT-AUTHORIZED))
    (map-delete market id)
    (print {a: "unlist-in-ustx", id: id})
    (ok true)))

(define-public (buy-in-ustx (id uint) (comm-trait <commission-trait>))
  (let ((owner (unwrap! (nft-get-owner? mr-beans-balls-pass id) (err ERR-NOT-FOUND)))
      (listing (unwrap! (map-get? market id) (err ERR-LISTING)))
      (price (get price listing))
      (royalty (get royalty listing)))
    (asserts! (is-eq (contract-of comm-trait) (get commission listing)) (err ERR-WRONG-COMMISSION))
    (try! (stx-transfer? price tx-sender owner))
    (try! (pay-royalty price royalty))
    (try! (contract-call? comm-trait pay id price))
    (try! (trnsfr id owner tx-sender))
    (map-delete market id)
    (print {a: "buy-in-ustx", id: id})
    (ok true)))
    
(define-data-var royalty-percent uint u500)

(define-read-only (get-royalty-percent)
  (ok (var-get royalty-percent)))

(define-public (set-royalty-percent (royalty uint))
  (begin
    (asserts! (or (is-eq tx-sender (var-get artist-address)) (is-eq tx-sender DEPLOYER)) (err ERR-INVALID-USER))
    (asserts! (and (>= royalty u0) (<= royalty u1000)) (err ERR-INVALID-PERCENTAGE))
    (ok (var-set royalty-percent royalty))))

(define-private (pay-royalty (price uint) (royalty uint))
  (let (
    (royalty-amount (/ (* price royalty) u10000))
  )
  (if (and (> royalty-amount u0) (not (is-eq tx-sender (var-get artist-address))))
    (try! (stx-transfer? royalty-amount tx-sender (var-get artist-address)))
    (print false)
  )
  (ok true)))

;; Extra functionality required for mintpass
(define-public (toggle-sale-state)
  (let 
    (
      ;; (premint (not (var-get premint-enabled)))
      (sale (not (var-get sale-enabled)))
    )
    (asserts! (or (is-eq tx-sender (var-get artist-address)) (is-eq tx-sender DEPLOYER)) (err ERR-NOT-AUTHORIZED))
    (var-set premint-enabled false)
    (var-set sale-enabled sale)
    (print { sale: sale })
    (ok true)))

(define-public (enable-premint)
  (begin
    (asserts! (or (is-eq tx-sender (var-get artist-address)) (is-eq tx-sender DEPLOYER)) (err ERR-NOT-AUTHORIZED))
    (ok (var-set premint-enabled true))))

(define-public (disable-premint)
  (begin
    (asserts! (or (is-eq tx-sender (var-get artist-address)) (is-eq tx-sender DEPLOYER)) (err ERR-NOT-AUTHORIZED))
    (ok (var-set premint-enabled false))))

(define-read-only (get-passes (caller principal))
  (default-to u0 (map-get? mint-passes caller)))

(define-read-only (get-premint-enabled)
  (ok (var-get premint-enabled)))

(define-read-only (get-sale-enabled)
  (ok (var-get sale-enabled)))  

(map-set mint-passes 'SP1MASMF30DRR4KDR5TG4RZEEVHBKS1ZX4TJZ8P06 u3)
(map-set mint-passes 'SP2CS8HQT85F2775MFAP62MQY25TK0RJZHD0JAS2M u3)
(map-set mint-passes 'SPZ7CR83QD9KYPFR25MV5KV88BH0Q4YX7N52D8SH u3)
(map-set mint-passes 'SP2C72R5ZP035N7F6EC72P4AM314H8EJNB2R3B70J u3)
(map-set mint-passes 'SP1RB1V65A1PAAXYT8PVFFFC6T1FN9E8RQX7HMDKC u3)
(map-set mint-passes 'SP39111TENWTV208V2DYR1ZGNK2J8P9E6TP5SAVGP u3)
(map-set mint-passes 'SP3ZKDJFGYHR95RRVJBDBFX05DN007EYK4A7VR3QR u3)
(map-set mint-passes 'SP1Y5S7Y8R3FBEVD4NFDVYGVXQSKCCQGJEH1XWSF0 u3)
(map-set mint-passes 'SP1GDRM1565PRSSK2GZJ1XXAQZYEQPSD5J079DMTF u3)
(map-set mint-passes 'SP2XR93CDSHRTV6YH45RWQB35A8N96N0464G6ZAEP u3)
(map-set mint-passes 'SP2D8RP8J0EYMZPFTT0SS0YE4HR0JV6CBBAB9508F u3)
(map-set mint-passes 'SPGCBYAGPWBZTSHPEP1Y293K3W8TA27BHVYZHGWV u3)
(map-set mint-passes 'SP2387TVHZ5X6TSCD6HNDA7N8ZC4M1XNYHFBHNWS5 u3)
(map-set mint-passes 'SP2JWM4MB1SBY2FT3PG5PM0V12NW8Y4FK1XXWBHSF u3)
(map-set mint-passes 'SP2M7K3YM8813404G1R7AXV106CPWH0Z5ZA80JVAV u3)
(map-set mint-passes 'SP1TR4FGX3PF2DN58BMQC3W2ZNDK8X9GK1GG5MRFM u3)
(map-set mint-passes 'SP3Y0MB27NDVVPKH95513YJ6XZTZEEMT2ACBYZJN2 u3)
(map-set mint-passes 'SP10PX1X6X5DZEZCZ0ZTV6D1DNHQ2GJXKPAA3YTKV u3)
(map-set mint-passes 'SP3DGHSW42HV4T5XR999R3MBV02W6KA50W1D85TSV u3)
(map-set mint-passes 'SP1VE0ZMF07SK45JVYAMXNZBTYPG67CNEQ2QMAVP9 u3)
(map-set mint-passes 'SP2ZKT3C5R76512ACSA1C0R1HJ21ASG8ZESPCT3ZC u3)
(map-set mint-passes 'SP12G2A9ZKB08QQTZQXWH95K9H6J7G5SBGJ45WPYD u3)
(map-set mint-passes 'SP21ED8W24R13AP4CPEKWK5AZPS5XFFZ4N3PY5YX1 u3)
(map-set mint-passes 'SPJZ11GWBM8ER4Y9R75R76VQYHR80H0EHTZSGWBY u3)
(map-set mint-passes 'SP1R8Y5SDHZ9EQGHCMZ9260KDQ1X4W9EEP3HEP3DP u3)
(map-set mint-passes 'SP1W4A6KRZF8RVYR3844HYJJ9MFJVM7GBFKDS53VH u3)
(map-set mint-passes 'SP17B475SHGM98Y39AR2AVZ3ZFTWV61MKDPFCGF3A u3)
(map-set mint-passes 'SP3W83KG17KJZZXPDZQDTRQKQRGHNFZN410R9P02E u3)
(map-set mint-passes 'SP1QFPY6JWB0A90PJSS62XRYF9WFTJEZG0B1EM128 u3)
(map-set mint-passes 'SP2974N9QQYZH53MEAZ4N5JZ5PQX03NYS9JP2HSMF u3)
(map-set mint-passes 'SP3KGZNDFFJERA6YS5V5MSY9Q95516RPSCH6MHDHW u3)
(map-set mint-passes 'SP1ZCYG0D3HCK2F7SY8VH9ZREB0JWCBSAPFNS8V5Z u3)
(map-set mint-passes 'SP23QP2XG6Q8HQZNKGTQZR9S8PFECAGFSC94X4237 u3)
(map-set mint-passes 'SP2BN9JN4WEG02QYVX5Y21VMB2JWV3W0KNHPH9R4P u3)
(map-set mint-passes 'SP2P8RJ42R8MP0AAJASTT7ST6VZ7GHCWR7PET3B21 u3)
(map-set mint-passes 'SP3QJ0MM9G8M3DSF5NEX7CEJ99NFDQ81WG17T7RMC u3)
(map-set mint-passes 'SP35MER4PHM6XGB99YDRQAK0M0JQ8F9CVF04VZ1VX u3)
(map-set mint-passes 'SPBFPD0285PKTCTADGP9GX2JFE12R8ZXSCWRYW39 u3)
(map-set mint-passes 'SP15QCM7NJDMDJEMD3H1RDR2PV7JH0B4EMNYT9T69 u3)
(map-set mint-passes 'SP39008W341K5JJPC8EX27F8S936ACQNB9FHQZDRJ u3)
(map-set mint-passes 'SP3CVSW20N5KX1QWQB5WB6B4BZCG5ZEWDCG21RFQ4 u3)
(map-set mint-passes 'SP16HBH1ECJ71E8VWYSSQKYN8ZT6S8DTBTAX02TRF u3)
(map-set mint-passes 'SP1AQDVJF18XEFVXMWTRAW9TQ0N2DCN0178FKW03R u3)
(map-set mint-passes 'SP1RTYKK9GZ96KZ10VEGZ3SEPXK9CXXF2M4EF4HZV u3)
(map-set mint-passes 'SP2RNHHQDTHGHPEVX83291K4AQZVGWEJ7WCQQDA9R u3)
(map-set mint-passes 'SPWD1B6SKM4T0DC4P3TQ20JWJ45VYGFHECMWKA4B u3)
(map-set mint-passes 'SP3NAJRMR7F04RK8WG2F48MSQ4ETH3JH1F9MV4F50 u3)
(map-set mint-passes 'SP26V1A3HBSSTDNFHXCWRP991R6FBFSYD7RQR0MX5 u3)
(map-set mint-passes 'SP2YE97WPR9C184MQ4RVM6AP1J629750Z1N48N82S u3)
(map-set mint-passes 'SP37D2Y7Z2VCAGN4Q2Z9VBRZDV1011ZKSD52WXFBF u3)
(map-set mint-passes 'SP24SKBA3DKKKC6JF1WNEN6E3YPDJMNEEYBN8K55K u3)
(map-set mint-passes 'SP2C1QGPCE4SDWCVVKZW196DZSV04CE5J5944VK18 u3)
(map-set mint-passes 'SP33KXWETMY4RN3ZBPQB69H46MRF9TA5971VAQ09Z u3)
(map-set mint-passes 'SP1TM71P56ARSNQFFAQWBQXJ6786CHKH9G2C3ZFG3 u3)
(map-set mint-passes 'SP2SKMAR9WMD9DBJHC4XTQXPZCDNV1258PSJTRGTV u3)
(map-set mint-passes 'SP1J8Q15A5JR4DS0KHPZH1M76T5PF936MDR7NRSNR u3)
(map-set mint-passes 'SP2HDF5A0ZD2CG2SEE3NSVE9TCPFJ3Y14BQ8W997Z u3)
(map-set mint-passes 'SP1H661J9780EABHVJF5X44P1VA1FNYFXRW5TE54D u3)
(map-set mint-passes 'SP1B46TPZD8Y3ETHGZYJAPHD9GHJK81K08WRB127X u3)
(map-set mint-passes 'SP276DW5YXWGM2W2SNB78M3R3STS5AR7GMETNYRVE u3)
(map-set mint-passes 'SP3XFNRZBTQ18VGFJ847HNC7SNZ2NTV2RB2TGXRD4 u3)
(map-set mint-passes 'SPZNNQ8X00PT7V5KM2RYW66XXAT415BYAC1S0ETW u3)
(map-set mint-passes 'SPRGD4R7KZDFSGHHRRNM9KMJK08YM45Y9D8ECFBY u3)
(map-set mint-passes 'SP11F09DT5HFYN7Z5HG15QXW0CMD40T2XJYY0G5AB u3)
(map-set mint-passes 'SP20TC4TV7SAKSM6TQ2AE4FA2XZJJ96M9M65QC89K u3)
(map-set mint-passes 'SP31CZZ7NJA484QSV739BKF1NH13G4XBCJ1AMM9GW u3)
(map-set mint-passes 'SP8M9497WZXHACAGCZ8SJEKAWWGQFP4A8T35H35Y u3)
(map-set mint-passes 'SP124SDAF85R5JZBGXH36SS7GGNQ2FJ6N03QJNDYG u3)
(map-set mint-passes 'SP1QMPDYY2YW5PBMF98HHKBGKVQECEDSF3986D17D u3)
(map-set mint-passes 'SP2P13D5D7XHMFF4MQV1XGFN26898XRXZYFQDYZ7C u3)
(map-set mint-passes 'SP5JYSPE3QTN5A0YNGS424V0F3Z1B7X2TSK3SDHE u3)
(map-set mint-passes 'SPREQTEDZ6EE2JPYX8AESNQ8MWXMP35QWT0J3D0T u3)
(map-set mint-passes 'SP3XF04FKY4B4X1YPM42HY447QV7MJKMF5GDB3RPA u3)
(map-set mint-passes 'SP1JB5QF8641WMVG74BTZEKPEXVPP34XDFEBCTHAX u3)
(map-set mint-passes 'SP1G5A2QHTRB9W4QAS1Y2DZSB9JRVC415A2BG9NTZ u3)
(map-set mint-passes 'SP3MM7GKGBCYWZ3K6630PJC8193HJDPTNZ5W91KKR u3)
(map-set mint-passes 'SP3VWWZYHF92082SPJCTK1X61665VYS20VGBB1KAZ u3)
(map-set mint-passes 'SP2YRJ2KVJPTW4M43VTZDFSQQ0YPGK5YN7VH9Q4MX u3)
(map-set mint-passes 'SP2N4AQNMT57GFR8YKMKHWP6WSR8BBXRVH8HS2YRN u3)
(map-set mint-passes 'SP1H4R5BJTVDJAGY139PNPJ2Q7P9T3M538GPTEP2V u3)
(map-set mint-passes 'SP1Y6GGERXDWVDG18BK9MHTKP6TB5YSJ6FJRTYFGB u3)
(map-set mint-passes 'SP260ZF58NPJZCJGB2K51327RW299BHES24W4ARKE u3)
(map-set mint-passes 'SPJ353E6AFJY1MFNZ326EJ2BMD6RBN39K69X9X85 u3)
(map-set mint-passes 'SP0461G1E32QD4ZMYJKNK98FSERMEY39K1XGQVKR u3)
(map-set mint-passes 'SP26FZ8W5GPEH1N64K1GFCV63A4JPMSP917J0G60P u3)
(map-set mint-passes 'SPGNRR2GG22EKH62N8DCW58YB4D1PVK8TP0KQTHD u3)
(map-set mint-passes 'SP1YNJN6Z56T05P2JJX846F5H8MEHK672JCWQA8D0 u3)
(map-set mint-passes 'SP2KH2B9MMPF10A4BWRND4KQADF8KABQEMP6FMEM8 u3)
(map-set mint-passes 'SP3655QW89K9WX4SXDG5NDQFN0N2AX771B9S4REB u3)
(map-set mint-passes 'SP2QVKZ2GWP97TW4RNCT8TN65JRJPVAKERHYSS13E u3)
(map-set mint-passes 'SP33NVNZHT60Q0RW6AM5F0RZDBTR4YZ6GW71JZG91 u3)
(map-set mint-passes 'SP3RNDPX6X3MNZMS3NV28AF6TXVFXDXCAJTTX78GG u3)
(map-set mint-passes 'SP95KV154J1ZY5SFRZKBX9NW7EDW4HT6641VA1S2 u3)
(map-set mint-passes 'SP12WHJ0PCGE53HNRZNF92PKH4R3C6HWZV4MF2SRV u3)
(map-set mint-passes 'SP1JT44RAW632C35SNVVN3J11G42T6E5P239ZC9DQ u3)
(map-set mint-passes 'SP12H47A1JH7B3XN7GWZ0X6DZ385N6K5QNC8K1A2T u3)
(map-set mint-passes 'SP247YQ537PYPP12ZY615YSANMNH8C14BRF3CSMGC u3)
(map-set mint-passes 'SP2YG82P7QQCHE9FK8EKAM9X1QM3FQTH2WA5P4J3V u3)
(map-set mint-passes 'SPFD0Z2W50QMWRQ27ERW7KNGNHK6Q74EPD4C4TNQ u3)
(map-set mint-passes 'SP3EMZ5XM95XZRVFWB5M8JH3VRMMPJ8661WTT1M3T u3)
(map-set mint-passes 'SP84DM8Y7CGRVQN9EB1VMBHDQBWV420DQHCKEGZ6 u3)
(map-set mint-passes 'SP3R16A3VZS501D1GVMXXVPBQCJ7JMQ6YXE0FZHHN u3)
(map-set mint-passes 'SP2H8DP4MHZG7VQS1SAZCDJZ7F8HEP3DYKNRMEFB4 u3)
(map-set mint-passes 'SP74BB1WD3XG6V7NMK4TW5SFNHTJ5AD4N84CAZMF u3)
(map-set mint-passes 'SP3PK5JKAJ0XC1PP4CBA30B326159T1PEQX2EZTH8 u3)
(map-set mint-passes 'SP19PY85XP6C0ASYRPCY10N835KZJGC76ZVMK3XJF u3)
(map-set mint-passes 'SP15V20R21ERBNC5070QWF5SH1VKWPADVWC2RZRGV u3)
(map-set mint-passes 'SP3XDEQ0JHP6AGMWF6PQZMJC1C0BFK2H0YSWMNYXS u3)
(map-set mint-passes 'SP2664YJ6Z7AWGKSGYG3MSDCCR3ZZREX3JH14TCCE u3)
(map-set mint-passes 'SP2PZYA27E8MRBQHQXE0JQH5CHM9JJNM00YEMC4QJ u3)
(map-set mint-passes 'SP242WM1RTHV1WNZ763FNJRVMZB6KWJN9W51C58P5 u3)
(map-set mint-passes 'SP3QC9YJKFC172PYK5E316NKPEAWBHF2NSMC875B5 u3)
(map-set mint-passes 'SP3JFEKTFHVC3B9RRQ46FNC8MFRZPHVYYTFWYRX6W u3)
(map-set mint-passes 'SP2WCGAAASF2CGHNNK2596HF97JZNAYM6HMKK4B0F u3)
(map-set mint-passes 'SP1MES38TEXN33YBE8XYKEJX24E0WYCG26P29APQQ u3)
(map-set mint-passes 'SP2FKWC8ZJGSSZJ7CWJD0VVWQZWWY5Y8FRGH6SS3Y u3)
(map-set mint-passes 'SP2CDF65P3M17JGPQKGD0105Y08F4EPRHHJ2FTB23 u3)
(map-set mint-passes 'SP3QSCYA62H5WQVA99S30J5PKC60VWH0T7QRRKVH9 u3)
(map-set mint-passes 'SP45RYP4W83SMSCG5C7MZCM1EFVRJY4K6D0E05Z6 u3)
(map-set mint-passes 'SP32RXJSH9DX4JGMBSZG0RQS09RG2MHBCGK4H8A7D u3)
(map-set mint-passes 'SP17CDWPAE74A84XE2KC8Y37CEQ3R5Q634WX3AMSE u3)
(map-set mint-passes 'SP3KRP4C61122ZAX5HGDESXJJ9GK6GD9W1Y3ME3TP u3)
(map-set mint-passes 'SPKSXKVMKQ2E70VEQZE45NJJ36RNW4MDQ4YX6K56 u3)
(map-set mint-passes 'SPCEMCY55HV62G79730B8B6HZSD90337NFQHBR4J u3)
(map-set mint-passes 'SP1VEHWR3SVWZWN24YQTHS3CVSMWEHK39CBM6Z3F5 u3)
(map-set mint-passes 'SP30MSY8NECE4SJJRQ5NVFZA58HF9Y93XX6E15WMG u3)
(map-set mint-passes 'SP3GB2942RJK72NYDDK04Y7AJ4R5T2YZ4JMP7FWJC u3)
(map-set mint-passes 'SP21VKSFK5HDJW79Q784TAZ5NCV3GXGMBCE1KMH5M u3)
(map-set mint-passes 'SP28F5HQ6KKNJ2ZG8016BGB2VJHBW9ESFC3RAHQP7 u3)
(map-set mint-passes 'SP2M7E656PJCTJDMM6C8JGCN9F8PS1M5HHHPSDW6S u3)
(map-set mint-passes 'SP285FVD7DDYBFHVM25HEQVR6XRM9GBP9SHK5RBYP u3)
(map-set mint-passes 'SP1ENGS5XVWVWYS02840ZKHD2GSP5AGB99TVA5R9T u3)
(map-set mint-passes 'SP2W4D4JR9NGV8XPFHYK74C2QW96A6AVX77EA7HBR u3)
(map-set mint-passes 'SP2W9W8C3FVDZ2ET6SQ9CW6E5KT7ZKAKNMTDZ20AV u3)
(map-set mint-passes 'SPK1WN6KW0YHQGRNC6M23VHTJM5PF7K83GKVFWA3 u3)
(map-set mint-passes 'SP11XXNZ8DE9GT7X9ZZQYPSHCT1A1VFBX0VBWJAHS u3)
(map-set mint-passes 'SP175FN7FDFPF620D3WP4R535210ETK5HESD37JS0 u3)
(map-set mint-passes 'SP29902VVK134BEFGP0F3QT7W2H5CFY2BVWAKSN7E u3)
(map-set mint-passes 'SP121VN7CBPC3RSABSWSHJ86WVWSH5MCNZ5668XFW u3)
(map-set mint-passes 'SP2E5Z88KRG4VVRCG0PF4PQ9YDWTT5CJ9T5PRXQTD u3)
(map-set mint-passes 'SP2HP87NYWP21HZMVV089R6N01YM8H32HXWCW9XN3 u3)
(map-set mint-passes 'SP2NT761GHGC630BYXCD89VC0ENFN6EZ83932BX3Y u3)
(map-set mint-passes 'SP1PTMKFMSV9AY3S1F7NNHT7SYPV7PSJK7F1A117P u3)
(map-set mint-passes 'SP3QKZKC2JVBEG7YFFJH2R4HMMWHEGKRP2XF8AD86 u3)
(map-set mint-passes 'SP2Z2CBMGWB9MQZAF5Z8X56KS69XRV3SJF4WKJ7J9 u3)
(map-set mint-passes 'SP3S29FMRBDVXGNZDFW0TP21D1ZE34ERZ8KAAQYFN u3)
(map-set mint-passes 'SPSAWHTNQ9PC0H09JJR3T11PK5RSDR568296TNP3 u3)
(map-set mint-passes 'SP2QCXPBCRS9ZMD40K1ZDX7T0V9R5PC8V665K85S9 u3)
(map-set mint-passes 'SP2VCZJDTT5TJ7A3QPPJPTEF7A9CD8FRG2BEEJF3D u3)
(map-set mint-passes 'SP1TR6GY4YA0TCNPVW3KWMXY9JEPJZ0831CG7SN9C u3)
(map-set mint-passes 'SP1KEWQG4TCYWGXCQSEKC81XKBAZ1WAVYT3D4PE4A u3)
(map-set mint-passes 'SP3TS3T9GSGFEDW7ZBJNFXMH6RY0AP7HNCQEE77DH u3)
(map-set mint-passes 'SP1BNRS2PKZQFXNC20T71QGVWBB3GTGVHF7HRJ1FX u3)
(map-set mint-passes 'SP24478XYAB7DZF7850JWVYQRGGRKDWXF7WKKRY30 u3)
(map-set mint-passes 'SP29T9QXCENKDDG3Y8GBP1JY8161MWTP49HXAGN8N u3)
(map-set mint-passes 'SP1DXHREJ18BGBA34P7QNESXTJMDW7D61RQZ0DBBZ u3)
(map-set mint-passes 'SP04E1XQ7V9JN4GGDKFCB26ANKVTFNFC8QHME8JS u3)
(map-set mint-passes 'SP2AW97KZR6VVRCW9M6YB5HT56T99VRZTGZP586P5 u3)
(map-set mint-passes 'SP9QH56JJ7VD59PYWDA3ZQDZSZ2KFF1EHNEFS3BX u3)
(map-set mint-passes 'SPC1KE74AZ8TT6GB8MXSY6W00MFNC29GDFXHPJX6 u3)
(map-set mint-passes 'SPMH2XEFF55ZNN0SY8WB9EEF25A64SG9DTF45ZY5 u3)
(map-set mint-passes 'SP29D6YMDNAKN1P045T6Z817RTE1AC0JAA99WAX2B u3)
(map-set mint-passes 'SP1FQCXVW3V42RK7JG1SNC5XGQFWWWKRFTHTXVQMW u3)
(map-set mint-passes 'SP24BVX267954TJNKR6BJ89K78H9WR5PVSMJH4C0M u3)
(map-set mint-passes 'SP1953PHRF5Y4VJ4C47SP8DQKEW0TZ2ANAW4XN8R4 u3)
(map-set mint-passes 'SPEZQQV4V9XTG94VDYXM5NNSE4P7W9Z8GFPAA71H u3)
(map-set mint-passes 'SP2KVYDHMXPTV87Q7BJBST7SDZH44YBQPWA3AZ8Y5 u3)
(map-set mint-passes 'SP2GZQ3SNB2RR2Z60E1YNT63HRY41EKS3NETQKP2G u3)
(map-set mint-passes 'SP1WF3C9XKKZW3NDN14FGCHTTXGZKR3SBPZTPPMNN u3)
(map-set mint-passes 'SP26B3JVQSH8E4EFC6PS32G2QKZ7Q0ZDP7M73JJ2M u3)
(map-set mint-passes 'SP3YAJ6F97B2BT5ZED9GPSVJZXG2W00MR8E08EXTX u3)
(map-set mint-passes 'SP1WKNNR03C109N2FJWKFAQE130DRQKV528JRTZ08 u3)
(map-set mint-passes 'SPYPW8FDQPAY47BWCKE17548BZV5X1Y21HEZHA7Z u3)
(map-set mint-passes 'SP1EBPKACEAEBMF6SY8NZ54W709BFY39NCK1WK956 u3)
(map-set mint-passes 'SP3WAAYXPC6WZNEC7SHGR36D32RJPZVXRR1BG0QSY u3)
(map-set mint-passes 'SPEQRY4JQBJMZ3HK09836X94KA8BAAS738CET55M u3)
(map-set mint-passes 'SP1PY9RPSMS0STZKX6JM91NRPMRCKN428BSRJJEXV u3)
(map-set mint-passes 'SP1P38EZ7DKY3RP2DA3D6HSE4XMG1VG1BJW7KZTAQ u3)
(map-set mint-passes 'SP1VSV3ZA8BHT7DN3RS3REQRRCS33V92KRQ994QT7 u3)
(map-set mint-passes 'SPNA42KGWFCNNM41RTA7RJE2C4HX8CQXJSGDNK9W u3)
(map-set mint-passes 'SP2Z7WZWZWNS0N6X80QRV4SVB109SCJZYQCN3KZGW u3)
(map-set mint-passes 'SP2ZXDBYT1RSP98ZZXXRDGKX3TMXCCCGERNBD5YMY u3)
(map-set mint-passes 'SP3A8AVK2R7KKQ5E8Q1REHNS7WSNPZR3PGVVREAQS u3)
(map-set mint-passes 'SP2SMSPX443W4HTX9YT9WVV5C0A212FJ8WQMGT51M u3)
(map-set mint-passes 'SP1715MB63DGCS5Q65H8FMZETHSGP36T5C2Q78HBY u3)
(map-set mint-passes 'SPZEWXCGS06TYH9EAPDG0ZC6E962CG6Z8NJJXJKT u3)
(map-set mint-passes 'SPDP60WENJKFP72QAFW3Y76G8AZN3S93BQ0677P7 u3)
(map-set mint-passes 'SP3CDRXW1V3YEDKY47PCTV6EA5NVZMDCS7HCJW38X u3)
(map-set mint-passes 'SP1NPDHF9CQ8B9Q045CCQS1MR9M9SGJ5TT6WFFCD2 u3)
(map-set mint-passes 'SP1XAR0A0J2AFWXQXCJ07SPV3TSZV2BCQQAQ6H5B5 u3)
(map-set mint-passes 'SP3GMV2CXBQV18KEN83AGW574WFKMWDEMMD8G6VB1 u3)
(map-set mint-passes 'SP2CCAJB1DB8BQSXXF54CKRXWZSSJXTZRDZKAW1S u3)
(map-set mint-passes 'SP9XVN6QMN1XEGTM6SR6ZDHZDAWJ6Y6RNMDPZ7Y9 u3)
(map-set mint-passes 'SPQ5Q6C96DMXJ4E7H5C1R2J9ZE3CESW2NWDPVGDP u3)
(map-set mint-passes 'SP3C7NHSDNVN80JJ2VREHCNJRD2WKXK5EKHHE9W3F u3)
(map-set mint-passes 'SP150GJWQXH1M8DHWM38T0AHFVAFN4SC2NJHDR1HH u3)
(map-set mint-passes 'SPTH50576N70SJ6X2QP5ZMNN3XYDK9P9VVSDPPWB u3)
(map-set mint-passes 'SP2ZRF8JCSA852P2K4ZB7RS21M43NYFKPSQ7DG1N8 u3)
(map-set mint-passes 'SP17JB57M295MP5QJAVFZDF9SJX6QR4DDFQ0H5C9F u3)
(map-set mint-passes 'SP1HVXK8YQT5GDMDWBPGREWGXZGHP03NTNC43N2MD u3)
(map-set mint-passes 'SPAC6F652P6MGJQAM4AWHDW162TCD4TRP49W68XP u3)
(map-set mint-passes 'SP2S7PW1PK8ZE54EFYT6FRFNC22KHZSNMYMYZFAC6 u3)
(map-set mint-passes 'SP1NHTFER11R91J43Z3RM3VNEYGF9B4A758V3N7B2 u3)
(map-set mint-passes 'SPENXM9Q8CKQGJF9DBRF12WR0SQXFQMYJKRAZG3F u3)
(map-set mint-passes 'SP162D87CY84QVVCMJKNKGHC7GGXFGA0TAR9D0XJW u3)
(map-set mint-passes 'SP3QK7CB97R2Z884AAF81QCNHYJY8BTRVW6WCRG71 u3)
(map-set mint-passes 'SP12HM3T9DBXRWRNSWX26F7JQ3E4VFNQYEDB4E2ND u3)
(map-set mint-passes 'SPBNZD0NMBJVRYJZ3SJ4MTRSZ3FEMGGTV2YM5MFV u3)
(map-set mint-passes 'SP1DP6WPG1FM6EAYTJS6MMVWRB5HGB8GY948FMKF8 u3)
(map-set mint-passes 'SP3NJ34KE66TG9RK6BRHF2VK4HHGEM09F2XBAVXPC u3)
(map-set mint-passes 'SP8N846PR1492HB2A08R5G96RYNKWRHDJDTBM227 u3)
(map-set mint-passes 'SP3GJW3X9760J4ZH6FX5W01HH30EZ50ECVVQ7JA6X u3)
(map-set mint-passes 'SP18QVQ3CMGJ0Z4WQN39QX3MRNWRYBRC525KHF93V u3)
(map-set mint-passes 'SP28JP1FEVX7G3YFDJ59GKKQTZEVQQ49YDM0FDFK4 u3)
(map-set mint-passes 'SP377CXRGSJ0TJ712011ZEGMTM1J77QVZQSCFMRAH u3)
(map-set mint-passes 'SP386Z1MF50FKYWMBNB3HGPJMW7DSTF1YYMJRAQW3 u3)
(map-set mint-passes 'SP367QHKVP87EY03RVXEVQ9V8A22FP465BNN3Z0NT u3)
(map-set mint-passes 'SP1CRPKG05CW4AQXA0FQF4C89617YVQYTA6WP30HQ u3)
(map-set mint-passes 'SP3C79MES43VN3W4T9VJS5W8CENCTNF5JFHGSHW1G u3)
(map-set mint-passes 'SP3T8T79PTNATME7RVF4R3K08N3GZ3NHYH0EREQXF u3)
(map-set mint-passes 'SP1SVK3YQV3S1NA2DCJG2NGADDT34H9SYRGYKD6GX u3)
(map-set mint-passes 'SP197KQG2020VVCEC775DDHM61H2GP406029NYB5N u3)
(map-set mint-passes 'SP1X7X9SCHHK4JG4K5NXZ4TDNWKBQR759A85XC1PC u3)
(map-set mint-passes 'SP9GKT397E454TR6ZAGQDTKMEBZ12H9A0FKZS70N u3)
(map-set mint-passes 'SP1DY3DQMVAA1F8JJAJBKPQ0HKQ1FZG67JG0YD5P3 u3)
(map-set mint-passes 'SPN3JBKZRNC5SGBC9HZ6TTJK4Z9QTW96EPPWM4A u3)
(map-set mint-passes 'SP2YKJ7436HA8QDRBW9887E3SBTN85CTQ2749J6B0 u3)
(map-set mint-passes 'SP2AWE8GJ52MKEAGGBTTNEEXZSM9VF8CTYK7ZCZDC u3)
(map-set mint-passes 'SP28FHT7VGBJ3B0584V1EVHED3MKTE1M8VQJDNB6R u3)
(map-set mint-passes 'SP2F0DP9Z3KSS0DABDBJN0DA0SHMCVWHXPVTH3PJJ u3)
(map-set mint-passes 'SP3YMEDJG3QJ6ENDHDWPKR8VP6AT4QMZ84QREYTSV u3)
(map-set mint-passes 'SP261QDN13NMFZ3MGB3T8R2XQPNXZVZ640TYPYSNQ u3)
(map-set mint-passes 'SPS16TEXFZMZX7WM7714A6BHSM5VERV8YSAZ410V u3)
(map-set mint-passes 'SPP8J5DSCWA7QGA9T7SSF47P0S07TSDN0NJK56RR u3)
(map-set mint-passes 'SPAFPBD7M89973WDEN68FKYW761RQVYNHSEFQZB9 u3)
(map-set mint-passes 'SP2X0NND6TG38J4H88N3SAXMM6HTC8Z1K69VN8ZJ4 u3)
(map-set mint-passes 'SP1HPB7YTZDXMZSZD51C113PQFAXKSNR0QYFFPWVC u3)
(map-set mint-passes 'SP3PHHKXSNKK9G7W7FANYZ5N1BAAECQGZ6QRPDDVK u3)
(map-set mint-passes 'SP2CBBW64YE1X3YN0PZGPFHA1892PYZS7CSYWDZ7Z u3)
(map-set mint-passes 'SP3AK383DCT43SDR00PF6XNKGEC3330NHQNKFHHE2 u3)
(map-set mint-passes 'SP1JVGQ4A6RNQRQQZ9EC8CBNRN7E8EYW6427NWWC2 u3)
(map-set mint-passes 'SP2EM86AM2AYGGNJX562AY6BDTKWXQMQVQ0T863M6 u3)
(map-set mint-passes 'SP3RKRKGAW47KZWMMHNS9RFRDX4VM0W1M8D8PWZXJ u3)
(map-set mint-passes 'SP6Z039010BSKKHRSYVDYPES8M7BZWWZGYGXZ2FF u3)
(map-set mint-passes 'SPGG4ETPWVF72DMJB35TTTVPNNABHJY11CPR6E0Q u3)
(map-set mint-passes 'SP1EMXT9RET8W5TXQ325BG3TJ6X15NXV5GKEGVQE6 u3)
(map-set mint-passes 'SP1EPWNPPGEZMGKHFZ6WXEZHTVTKH0CT77NM32X43 u3)
(map-set mint-passes 'SP3D24H3ZQ1RM909VG5EVNPWE9FJJNEYTY6Y98QNG u3)
(map-set mint-passes 'SPWG3T2SRBV03N3NHK7BEEPXGB3N8HHQE8PK9GEC u3)
(map-set mint-passes 'SP57DXF9BCNES18RAFSW5G51HCN34YQBCZF3E3W4 u3)
(map-set mint-passes 'SP1ZN8VQPQDN6Y4D1J8XB7X7JMH0YYP3GG655MCNG u3)
(map-set mint-passes 'SP2J653WNCVPN98JJAMSV6MZNWDQ08FKS7H3Y7H4V u3)
(map-set mint-passes 'SPYZ9RXB9PQRRK30FS587NV973JH60RGFR5SNPGK u3)
(map-set mint-passes 'SP22ZXMBKESRXAWQD1JAJ4A6HT117PVSKBEJ19FQX u3)
(map-set mint-passes 'SP1PAGYEDF35JACKPBBTDRYDTV84ZAT0FAMCC38V9 u3)
(map-set mint-passes 'SP16S5RF5VRCFFVN9E9B0DTK10S5Q1V8QTYM4C01N u3)
(map-set mint-passes 'SP1V6DPH7NA6Q821GD441Z6JZFP5Y9V07C1JDNJ1R u3)
(map-set mint-passes 'SP3KVRE3RDYYSJ3JDGXKA0K15CC4JEA2ZGX4TJ5EC u3)
(map-set mint-passes 'SP2S7SX1SCGHWYXYKDAYSWM2QWTASP6B3ZF1ATMNF u3)
(map-set mint-passes 'SPPH3SX9JXBWY9PXGNVV91DCJN2W8SYV3PR88TY5 u3)
(map-set mint-passes 'SP2VT38EC8AKQ9YB4F7M9MV3Y6JK610PVFE991SC0 u3)
(map-set mint-passes 'SP2SFZX1WJSKT1GA2STDT6E5NWDX44GW4BB8DW4DJ u3)
(map-set mint-passes 'SP1VXXTC9R98DAXCT14CZMH2J78DXKT6J6AP6HXV6 u3)
(map-set mint-passes 'SP2N3BWTNFZQNVDW0CXJGTEW26N5QXNH1SJQ6BVQH u3)
(map-set mint-passes 'SP19SJJZGH0GA9GBSDSA2FVPHWVEHBZE5WNCKPKEA u3)
(map-set mint-passes 'SP2XFXSRANE85W2TEEXBPMA16QZC0TTJ7BG7SP6CD u3)
(map-set mint-passes 'SP29T1D0TCC9EH55KEA4R4VQ1R6K1FB3QSDAPGS2G u3)
(map-set mint-passes 'SP2DFK4MZK7GRQ7EDAXB6R7AD7KRK0NDEA2AT1KMS u3)
(map-set mint-passes 'SP3CK642B6119EVC6CT550PW5EZZ1AJW661ZMQTYD u3)
(map-set mint-passes 'SPWQYTR0VTYW79ATAMY3T9JEBH5DM2E0WZQHCYKE u3)
(map-set mint-passes 'SP10VWV3Z57GNJQD4Y4C0YDMS5Y9E60WEJMQ1W1Z5 u3)
(map-set mint-passes 'SP3DYP99Z4RPX11G384JR7GAN9RQD6WWKGKW9TC4E u3)
(map-set mint-passes 'SPB1PE8KJMQB74PRMB0WFT129V64R7Y11X601W76 u3)
(map-set mint-passes 'SP1F81CCCJ1CNXS9WBCTZKM25YWNVJ61G8SZ5YJWY u3)
(map-set mint-passes 'SP17D2C9PE4WAV8J8GAY1DBWZ9G4KQY68KKMFC9CD u3)
(map-set mint-passes 'SP1A2JZK54QZB0ZFKVQN1GF2VNEYYNQDQR4V8XEPW u3)
(map-set mint-passes 'SP2KZ24AM4X9HGTG8314MS4VSY1CVAFH0G1KBZZ1D u3)
(map-set mint-passes 'SP274JYGEQHMBJWC0S925CT3CNX4WPWD8Z303BCG9 u3)
(map-set mint-passes 'SP350WG9K6HPV0YC3SAMC6JCABXXDNBNK4KMW992E u3)
(map-set mint-passes 'SP389APB4DHZ836P4AE9RJW7EKEZAPV5NPDNG7N46 u3)
(map-set mint-passes 'SP1XX6VRW29K0YSD1XW5CVX7ZH07MWS6TG0Z8JDM6 u3)
(map-set mint-passes 'SP31PFX7BQF3Y2AXCBSB93745ZJDF6SY7AWD15YZC u3)
(map-set mint-passes 'SP5W88Y324AKEPZZJB89YKCGFKZRS5H4W8XBZ1K4 u3)
(map-set mint-passes 'SP1BWJRXRR1X3M0YEXV30Q20K7A28R18AR5A1XS7H u3)
(map-set mint-passes 'SP28RZ1QXMXJXVKRRCR3D7GR5D48XY0NNA9MZWHJB u3)
(map-set mint-passes 'SP2V004MT8C1JW4Y2R216DT9FA81VF4ZCHGVA1AQA u3)
(map-set mint-passes 'SP3XTGWHFB8BPRDBP553644D1QTX4Q5TJMMCB0AH7 u3)
(map-set mint-passes 'SP1GJ5AQ9MR1CX02GGTRFT7YF33GY7GGZ4WC70S0E u3)
(map-set mint-passes 'SP1FETXHJNYJ20ZE5SY778EJF5KJ1S9RTN0T7VHD9 u3)
(map-set mint-passes 'SP24H2A2GSP1EG6HAMG8AJ22WKZ5GYQAK9Q2B6STP u3)
(map-set mint-passes 'SP1MRNFW42RBFK78BBTNV0NKPGDFCTQ8NA9GWXAHM u3)
(map-set mint-passes 'SP364AK56QD8JSW96NZN8H2C5HGR2GQN0YACQ1P7N u3)
(map-set mint-passes 'SP120VNX9AW930DP8CZTW7AQVB83DSSHT0F2N0519 u3)
(map-set mint-passes 'SP317ERC604C6NSX1WACVMKCHTS8N86BHABZWJG7W u3)
(map-set mint-passes 'SP1J0AJW43QK3SX82ECZ7407YN0Z7EZZPD9JN5ZPY u3)
(map-set mint-passes 'SP3V8WZXGVC4K40CJVKBAPYACJ450HNPVS1BN4YQW u3)
(map-set mint-passes 'SP1CHWS7TDP36PPVWV8E4Q8QV7S8SZPYYWW9N0ZW8 u3)
(map-set mint-passes 'SP31VGKZCV2Q7SKC02DFMHR7RCM50XQ7ZH524P1CF u3)
(map-set mint-passes 'SP248K580TYNDV69P5VHH812GFEAR7F2QXGJ1DM8S u3)
(map-set mint-passes 'SP35MER4PHM6XGB99YDRQAK0M0JQ8F9CVF04VZ1VX u3)
