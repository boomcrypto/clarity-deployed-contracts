
(use-trait ft-trait .sip010-ft-trait.sip010-ft-trait)
(use-trait nft-trait .sip009-nft-trait.sip009-nft-trait)

(define-public (transfer-mix-many-0-1
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal}))
	(begin
    
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1)
	)
)

(define-public (transfer-mix-many-0-2
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2)
	)
)

(define-public (transfer-mix-many-0-3
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3)
	)
)

(define-public (transfer-mix-many-0-4
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4)
	)
)

(define-public (transfer-mix-many-0-5
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5)
	)
)

(define-public (transfer-mix-many-0-6
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6)
	)
)

(define-public (transfer-mix-many-0-7
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7)
	)
)

(define-public (transfer-mix-many-0-8
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-8 <nft-trait>) (recipient-for-nft-8 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-8 recipient-for-nft-8)
	)
)

(define-public (transfer-mix-many-0-9
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-8 <nft-trait>) (recipient-for-nft-8 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-9 <nft-trait>) (recipient-for-nft-9 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-8 recipient-for-nft-8))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-9 recipient-for-nft-9)
	)
)

(define-public (transfer-mix-many-0-10
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-8 <nft-trait>) (recipient-for-nft-8 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-9 <nft-trait>) (recipient-for-nft-9 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-10 <nft-trait>) (recipient-for-nft-10 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-8 recipient-for-nft-8))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-9 recipient-for-nft-9))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-10 recipient-for-nft-10)
	)
)

(define-public (transfer-mix-many-0-11
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-8 <nft-trait>) (recipient-for-nft-8 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-9 <nft-trait>) (recipient-for-nft-9 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-10 <nft-trait>) (recipient-for-nft-10 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-11 <nft-trait>) (recipient-for-nft-11 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-8 recipient-for-nft-8))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-9 recipient-for-nft-9))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-10 recipient-for-nft-10))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-11 recipient-for-nft-11)
	)
)

(define-public (transfer-mix-many-0-12
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-8 <nft-trait>) (recipient-for-nft-8 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-9 <nft-trait>) (recipient-for-nft-9 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-10 <nft-trait>) (recipient-for-nft-10 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-11 <nft-trait>) (recipient-for-nft-11 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-12 <nft-trait>) (recipient-for-nft-12 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-8 recipient-for-nft-8))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-9 recipient-for-nft-9))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-10 recipient-for-nft-10))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-11 recipient-for-nft-11))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-12 recipient-for-nft-12)
	)
)

(define-public (transfer-mix-many-0-13
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-8 <nft-trait>) (recipient-for-nft-8 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-9 <nft-trait>) (recipient-for-nft-9 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-10 <nft-trait>) (recipient-for-nft-10 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-11 <nft-trait>) (recipient-for-nft-11 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-12 <nft-trait>) (recipient-for-nft-12 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-13 <nft-trait>) (recipient-for-nft-13 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-8 recipient-for-nft-8))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-9 recipient-for-nft-9))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-10 recipient-for-nft-10))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-11 recipient-for-nft-11))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-12 recipient-for-nft-12))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-13 recipient-for-nft-13)
	)
)

(define-public (transfer-mix-many-0-14
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-8 <nft-trait>) (recipient-for-nft-8 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-9 <nft-trait>) (recipient-for-nft-9 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-10 <nft-trait>) (recipient-for-nft-10 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-11 <nft-trait>) (recipient-for-nft-11 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-12 <nft-trait>) (recipient-for-nft-12 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-13 <nft-trait>) (recipient-for-nft-13 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-14 <nft-trait>) (recipient-for-nft-14 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-8 recipient-for-nft-8))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-9 recipient-for-nft-9))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-10 recipient-for-nft-10))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-11 recipient-for-nft-11))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-12 recipient-for-nft-12))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-13 recipient-for-nft-13))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-14 recipient-for-nft-14)
	)
)

(define-public (transfer-mix-many-0-15
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-8 <nft-trait>) (recipient-for-nft-8 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-9 <nft-trait>) (recipient-for-nft-9 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-10 <nft-trait>) (recipient-for-nft-10 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-11 <nft-trait>) (recipient-for-nft-11 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-12 <nft-trait>) (recipient-for-nft-12 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-13 <nft-trait>) (recipient-for-nft-13 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-14 <nft-trait>) (recipient-for-nft-14 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-15 <nft-trait>) (recipient-for-nft-15 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-8 recipient-for-nft-8))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-9 recipient-for-nft-9))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-10 recipient-for-nft-10))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-11 recipient-for-nft-11))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-12 recipient-for-nft-12))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-13 recipient-for-nft-13))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-14 recipient-for-nft-14))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-15 recipient-for-nft-15)
	)
)

(define-public (transfer-mix-many-0-16
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-8 <nft-trait>) (recipient-for-nft-8 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-9 <nft-trait>) (recipient-for-nft-9 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-10 <nft-trait>) (recipient-for-nft-10 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-11 <nft-trait>) (recipient-for-nft-11 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-12 <nft-trait>) (recipient-for-nft-12 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-13 <nft-trait>) (recipient-for-nft-13 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-14 <nft-trait>) (recipient-for-nft-14 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-15 <nft-trait>) (recipient-for-nft-15 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-16 <nft-trait>) (recipient-for-nft-16 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-8 recipient-for-nft-8))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-9 recipient-for-nft-9))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-10 recipient-for-nft-10))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-11 recipient-for-nft-11))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-12 recipient-for-nft-12))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-13 recipient-for-nft-13))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-14 recipient-for-nft-14))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-15 recipient-for-nft-15))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-16 recipient-for-nft-16)
	)
)

(define-public (transfer-mix-many-0-17
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-8 <nft-trait>) (recipient-for-nft-8 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-9 <nft-trait>) (recipient-for-nft-9 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-10 <nft-trait>) (recipient-for-nft-10 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-11 <nft-trait>) (recipient-for-nft-11 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-12 <nft-trait>) (recipient-for-nft-12 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-13 <nft-trait>) (recipient-for-nft-13 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-14 <nft-trait>) (recipient-for-nft-14 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-15 <nft-trait>) (recipient-for-nft-15 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-16 <nft-trait>) (recipient-for-nft-16 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-17 <nft-trait>) (recipient-for-nft-17 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-8 recipient-for-nft-8))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-9 recipient-for-nft-9))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-10 recipient-for-nft-10))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-11 recipient-for-nft-11))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-12 recipient-for-nft-12))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-13 recipient-for-nft-13))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-14 recipient-for-nft-14))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-15 recipient-for-nft-15))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-16 recipient-for-nft-16))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-17 recipient-for-nft-17)
	)
)

(define-public (transfer-mix-many-0-18
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-8 <nft-trait>) (recipient-for-nft-8 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-9 <nft-trait>) (recipient-for-nft-9 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-10 <nft-trait>) (recipient-for-nft-10 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-11 <nft-trait>) (recipient-for-nft-11 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-12 <nft-trait>) (recipient-for-nft-12 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-13 <nft-trait>) (recipient-for-nft-13 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-14 <nft-trait>) (recipient-for-nft-14 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-15 <nft-trait>) (recipient-for-nft-15 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-16 <nft-trait>) (recipient-for-nft-16 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-17 <nft-trait>) (recipient-for-nft-17 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-18 <nft-trait>) (recipient-for-nft-18 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-8 recipient-for-nft-8))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-9 recipient-for-nft-9))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-10 recipient-for-nft-10))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-11 recipient-for-nft-11))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-12 recipient-for-nft-12))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-13 recipient-for-nft-13))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-14 recipient-for-nft-14))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-15 recipient-for-nft-15))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-16 recipient-for-nft-16))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-17 recipient-for-nft-17))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-18 recipient-for-nft-18)
	)
)

(define-public (transfer-mix-many-0-19
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-8 <nft-trait>) (recipient-for-nft-8 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-9 <nft-trait>) (recipient-for-nft-9 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-10 <nft-trait>) (recipient-for-nft-10 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-11 <nft-trait>) (recipient-for-nft-11 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-12 <nft-trait>) (recipient-for-nft-12 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-13 <nft-trait>) (recipient-for-nft-13 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-14 <nft-trait>) (recipient-for-nft-14 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-15 <nft-trait>) (recipient-for-nft-15 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-16 <nft-trait>) (recipient-for-nft-16 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-17 <nft-trait>) (recipient-for-nft-17 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-18 <nft-trait>) (recipient-for-nft-18 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-19 <nft-trait>) (recipient-for-nft-19 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-8 recipient-for-nft-8))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-9 recipient-for-nft-9))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-10 recipient-for-nft-10))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-11 recipient-for-nft-11))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-12 recipient-for-nft-12))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-13 recipient-for-nft-13))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-14 recipient-for-nft-14))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-15 recipient-for-nft-15))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-16 recipient-for-nft-16))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-17 recipient-for-nft-17))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-18 recipient-for-nft-18))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-19 recipient-for-nft-19)
	)
)

(define-public (transfer-mix-many-0-20
	(recipients-for-stx (optional (list 400 { to: principal, amount: uint })))
	(nft-token-contract-1 <nft-trait>) (recipient-for-nft-1 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-2 <nft-trait>) (recipient-for-nft-2 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-3 <nft-trait>) (recipient-for-nft-3 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-4 <nft-trait>) (recipient-for-nft-4 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-5 <nft-trait>) (recipient-for-nft-5 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-6 <nft-trait>) (recipient-for-nft-6 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-7 <nft-trait>) (recipient-for-nft-7 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-8 <nft-trait>) (recipient-for-nft-8 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-9 <nft-trait>) (recipient-for-nft-9 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-10 <nft-trait>) (recipient-for-nft-10 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-11 <nft-trait>) (recipient-for-nft-11 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-12 <nft-trait>) (recipient-for-nft-12 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-13 <nft-trait>) (recipient-for-nft-13 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-14 <nft-trait>) (recipient-for-nft-14 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-15 <nft-trait>) (recipient-for-nft-15 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-16 <nft-trait>) (recipient-for-nft-16 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-17 <nft-trait>) (recipient-for-nft-17 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-18 <nft-trait>) (recipient-for-nft-18 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-19 <nft-trait>) (recipient-for-nft-19 {token-id: uint, sender: principal, to: principal})
	(nft-token-contract-20 <nft-trait>) (recipient-for-nft-20 {token-id: uint, sender: principal, to: principal}))
	(begin
		 (unwrap-panic (match recipients-for-stx value (contract-call? .transtacks-dope transfer-stx-many value) (ok true)))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-1 recipient-for-nft-1))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-2 recipient-for-nft-2))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-3 recipient-for-nft-3))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-4 recipient-for-nft-4))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-5 recipient-for-nft-5))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-6 recipient-for-nft-6))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-7 recipient-for-nft-7))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-8 recipient-for-nft-8))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-9 recipient-for-nft-9))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-10 recipient-for-nft-10))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-11 recipient-for-nft-11))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-12 recipient-for-nft-12))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-13 recipient-for-nft-13))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-14 recipient-for-nft-14))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-15 recipient-for-nft-15))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-16 recipient-for-nft-16))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-17 recipient-for-nft-17))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-18 recipient-for-nft-18))
		 (unwrap-panic (contract-call? .transtacks-dope transfer-nft nft-token-contract-19 recipient-for-nft-19))
		 (contract-call? .transtacks-dope transfer-nft nft-token-contract-20 recipient-for-nft-20)
	)
)

