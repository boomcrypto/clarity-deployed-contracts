(use-trait executor-trait .traits.executor-trait)

(define-public (execute-multi
    (s1 <executor-trait>) 
    (in1 uint)
    (mout1 uint)
    (s2 <executor-trait>) 
    (in2 uint)
    (mout2 uint)
    (s3 <executor-trait>) 
    (in3 uint)
    (mout3 uint)
    (s4 <executor-trait>) 
    (in4 uint)
    (mout4 uint)
    (s5 <executor-trait>) 
    (in5 uint)
    (mout5 uint)
    (s6 <executor-trait>) 
    (in6 uint)
    (mout6 uint)
)
 (ok (list 
       (contract-call? s1 execute in1 mout1)
       (contract-call? s2 execute in2 mout2)
       (contract-call? s3 execute in3 mout3)
       (contract-call? s4 execute in4 mout4)
       (contract-call? s5 execute in5 mout5)
       (contract-call? s6 execute in6 mout6)
    ))
)