;; hello alex 
(define-data-var UfXX2 principal tx-sender) (define-constant JrtmP (err u1011)) (define-private (check-is-owner) (ok (asserts! (is-eq tx-sender (var-get UfXX2)) JrtmP)) ) (define-public (register (swH0s uint) (T66xT uint) (fsvaD uint)) (let ( (bgGuO (unwrap-panic (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.auto-alex get-token-given-position swH0s))) (NNXoY (unwrap-panic (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.swap-helper-v1-03 get-given-helper 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.age000-governance-token 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.auto-alex bgGuO))) ) (try! (check-is-owner)) (get NNXoY (fold x6wRY 0x000000000000000000000000000000000000000000000000000000000000000000000000000000 {swH0s: swH0s, NNXoY: NNXoY, T66xT: T66xT, fsvaD: fsvaD})) (ok true) ) ) (define-private (x6wRY (i (buff 1)) (rfwMT {swH0s: uint, NNXoY: uint, T66xT: uint, fsvaD: uint})) (if (and (> (+ (get NNXoY rfwMT) (get fsvaD rfwMT)) (get swH0s rfwMT)) (> (get swH0s rfwMT) u5000000000)) (let ( (Y5rZM (unwrap-panic (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.auto-alex get-token-given-position (get swH0s rfwMT)))) ) (begin (unwrap-panic (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.auto-alex add-to-position (get swH0s rfwMT))) (unwrap-panic (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.swap-helper-v1-03 swap-helper 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.auto-alex 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.age000-governance-token Y5rZM (some (get T66xT rfwMT)))) {swH0s: (get NNXoY rfwMT), NNXoY: (unwrap-panic (contract-call? 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.swap-helper-v1-03 get-given-helper 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.age000-governance-token 'SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.auto-alex Y5rZM)), T66xT: (get T66xT rfwMT), fsvaD: (get fsvaD rfwMT)} ) ) rfwMT ) ) 